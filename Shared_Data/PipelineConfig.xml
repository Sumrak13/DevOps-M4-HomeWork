<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1268.v6eb_e2ee1a_85a">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3618.v13db_a_21f0fcf">
    <script>pipeline 
{
    agent any

    stages 
    {
        stage(&apos;Build the APP image&apos;)
        {
            steps
            {
                sh &apos;cd /vagrant/BGapp &amp;&amp; docker image build -t img-app -f Dockerfile.web .&apos;

            }
        }
        stage(&apos;Build the DB image&apos;)
        {
            steps
            {
                sh &apos;cd /vagrant/BGapp &amp;&amp; docker image build -t img-db -f Dockerfile.db .&apos;
            }
        }
        stage(&apos;Create Network for the Containers&apos;)
        {
            steps
            {
                sh &apos;docker network ls | grep appnet || docker network create appnet&apos;
            }
        }
        stage(&apos;Start the DB container&apos;)
        {
            steps
            {
                sh &apos;&apos;&apos;
                docker container rm -f co-img-app || true
                docker container run -d -p 9070:80 -v /vagrant/BGapp/web:/var/www/html:ro --name co-img-app --net appnet img-app
                &apos;&apos;&apos;
            }
        }
        stage(&apos;Start the Web container&apos;)
        {
            steps
            {
                sh &apos;&apos;&apos;
                docker container rm -f db || true
                docker container run -d --name db --net appnet -e MYSQL_ROOT_PASSWORD=12345 img-db
                &apos;&apos;&apos;
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>